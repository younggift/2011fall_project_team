class Person
{
 private String name;
 private int age;
 public String setName(String name){this.name = name;return name;}
 public int setAge(int age){this.age = age;return age;}
 public void getInfo()
 {
  System.out.println("name = " + name + ", age = " + age);
 }
}
class Student extends Person //通过继承,这些重复的定义将被省略.
{
 private String school;
 public String setSchool(String school){this.school = school; return school;}
 public void study()
 {
  System.out.println("study in " + school);
 }
 
 public static void main(String[] args)
 {
  Person p1 = new Person();
  p1.setName("unknown");p1.setAge(0);
  //p1.setSchool("unknown");错误,父类不能访问子类的成员.
  p1.getInfo();
  //p1.study();错误,父类不能访问子类的成员.
  
  Person p2 = new Student();
  p2.setName("mike");
  p2.setAge(23);
  ((Student)p2).setSchool("Cambridge");
  p2.getInfo();
  ((Student)p2).study();
  //父类的对象可以向下转型.

  /*但不能向上转型
  Student s2 = (Student)new Person();
  s2.setName("jane");s2.setAge(22);s2.setSchool("Cambridge");
  s2.getInfo();
  s2.study();
  */

  Student s1 = new Student();
  s1.setName("jackson");s1.setAge(24);s1.setSchool("Oxford");
  s1.getInfo();
  s1.study();
 }
}
 

